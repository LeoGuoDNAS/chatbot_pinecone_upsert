<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = ".";
    gCommonRootRelPath = ".";
    gTopicId = "2.13.6.0_1";
  
//]]></script>

  <script type="text/javascript" src="./template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="./template/scripts/common.min.js"></script>
  <script type="text/javascript" src="./template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="./template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="./whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="./template/styles/topic.min.css"/>
  <link rel="stylesheet" type="text/css" href="./template/single_page/topicheader.css"/>
  <meta name="topic-status" content="Draft"/>

<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
<meta name="generator" content="Adobe RoboHelp 2020"/>
<title>MarketPlace Overview</title>
<link rel="StyleSheet" href="assets/css/sampro.css" type="text/css"/>
<meta name="rh-index-keywords" content="purchase order,quote,quote manager,EDI,Electronic Data Interface,Purchasing EDI,MarketPlace"/></head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="MarketPlace Overview">
        <span>MarketPlace Overview</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



<h1>MarketPlace Overview</h1>
<h1>Marketplace Integration</h1>
<h2>27.1 Registry For Custom MarketPlace EDI Purchasing/Quoting</h2>
<h3>Purpose:</h3>
<p>This registry provides the configurations required to run the MarketPlace 
 functionality for Purchasing/Quoting.</p>
<h3>Important Fields:</h3>
<p><span style="font-weight: bold;">Id:</span> sys-edi</p>
<h3>Enable Markeplace EDI</h3>
<p><span style="font-weight: bold;">Setting Key:</span> Enabled    <span style="font-weight: bold;">Setting Value:</span> yes (default no)</p>
<h3>Paths to Folders</h3>
<p>The folders identified in these registries entry provide the interfaces 
 with Marketplace. Your Marketplace configuration must reference the locations 
 of these folders and have access to them.</p>
<p><span style="font-weight: bold;">Setting Key:</span> InboundFolder   <span style="font-weight: bold;"> Setting Value:</span> <span style="font-style: italic;">path 
 to inbound folder</span></p>
<p>Marketplace will deliver .xml files to this folder to be processed by 
 SAMPro</p>
<p><span style="font-weight: bold;">Setting Key:</span> InboundAcceptedFolder 
   <span style="font-weight: bold;"> Setting Value:</span> 
 <span style="font-style: italic;">path to inbound accepted folder</span></p>
<p>Files will be moved to this folder after they have been processed by 
 SAMPro. </p>
<p><span style="font-weight: bold;">Setting Key:</span> InboundRejectedFolder 
   <span style="font-weight: bold;"> Setting Value:</span> 
 <span style="font-style: italic;">path to inbound rejected folder</span></p>
<p>Files that could not be processed by SAMPro will be moved to this folder. 
 </p>
<h3>Registry to Add Line Item Promise Date</h3>
<p style="margin-left: 8px;">This registry will add the LineItemPromiseDate 
 tag to the items section the Marketplace PO.xml output file; it will be 
 populated with the SAMPro prchseordrlst_dte_prmsd. </p>
<p style="margin-left: 8px;"><span style="font-weight: bold;">Id:</span> 
 sys-edi</p>
<p style="margin-left: 8px;"><span style="font-weight: bold;">Setting Key:</span> 
 855POIncludeLineDatePromised  <span style="font-weight: bold;">Setting 
 Value:</span> Y  or  N (default is N)</p>
<h3>Logging</h3>
<p><span style="font-weight: bold;">Setting Key: </span>LogMode<span style="font-weight: bold;"> 
    Setting Value: </span>on</p>
<p><span style="font-weight: bold;">Setting Key: </span>LogPath<span style="font-weight: bold;"> 
   Setting Value: </span><span style="font-style: italic;">path\</span>EDILog.txt</p>
<p>If logging is enabled (strongly recommended), this registry specifies 
 the path and filename to be used for logging.</p>
<h3>Email Alerts</h3>
<p>These registries are used to send emails whenever errors are encountered 
 when processing Inbound folder messages.</p>
<p><span style="font-weight: bold;">Setting Key:</span> EmailEnabled   <span style="font-weight: bold;">Setting Value:</span>  yes (default 
 no)</p>
<p><span style="font-weight: bold;">Setting Key:</span> EmailFrom    <span style="font-weight: bold;">Setting Value:</span> <span style="font-style: italic;">validemailaddress</span></p>
<p><span style="font-weight: bold;">Setting Key:</span> EmailTo   <span style="font-weight: bold;">Setting Value:</span> <span style="font-style: italic;">validemailaddress</span></p>
<p><span style="font-weight: bold;">Setting Key:</span> EmailSubject   <span style="font-weight: bold;">Setting Value:</span> <span style="font-style: italic;">string</span> 
  </p>
<h3>Setting up the Start EDI Scanner</h3>
<p style="mso-list: l0 level1 lfo1;">The function Start EDI Scanner (Sscedi) 
 will be used to poll the Upload Folder for the unprocessed Xml files from 
 the Marketplace app. It may be necessary to run  Start Function List 
 Update to and the new Start EDI Scanner function.  It should be added 
 to the User Group for the special &#39;agent&#39; user that will be running this 
 function. A Scheduled Event should be set to run Start EDI Scanner every 
 60 seconds.</p>
<h3>MarketPlace/SAMPro Integration Overview</h3>
<p style="mso-list: l0 level1 lfo1;"><b style="mso-bidi-font-weight: normal;">T</b>he 
 purpose of this integration is to reduce the effort and increase the accuracy 
 of creating purchase orders and quotes in SAMPro. The PO’s requirements 
 originate in the third-party Marketplace application. The integration 
 includes several custom modifications to SAMPro including:</p>
<p style="mso-list: l0 level1 lfo1; margin-left: 48px;">1. The automatic 
 creation of Purchase Orders via a supplied .xml file.</p>
<p style="mso-list: l0 level1 lfo1; margin-left: 48px;"><span style="text-indent: -.25in; 
	 mso-list: l0 level1 lfo1;">2. The creation of a Purchase Order .xml 
 file used for delivery to the vendor by the Marketplace app.</span></p>
<p style="mso-list: l0 level1 lfo1; margin-left: 48px;">3. Receive Order 
 Acknowledgements that update the existing Purchase Order.</p>
<p style="mso-list: l0 level1 lfo1; margin-left: 48px;">4. Import Quote 
 Scope details to an existing Quote via a supplied .xml file.</p>
<p style="mso-list: l0 level1 lfo1; margin-left: 48px;">5. Automatic creation/update 
 of Inventory Part records via a supplied .xml file.</p>
<p style="mso-list: l0 level1 lfo1; margin-left: 48px;">6. Import Automated 
 Ship Notifications (ASN) to the Receiving Journal in SAMPro.</p>
<p style="mso-list: l0 level1 lfo1;">Each of these is detailed below.</p>
<p style="mso-list: l0 level1 lfo1; mso-bidi-font-weight: normal;"><b>1 
 and 2. Create PO from Marketplace App / Generate PO .xml file Delivered 
 to Vendor by Marketplace App (1 &amp; 2 above)</b></p>
<p style="mso-list: l0 level1 lfo1;">When a user using the Marketplace 
 app determines that parts need to be ordered to fulfill the needs of a 
 repair work order it will create a Purchase Order .xml file (see below) 
 and store it in a pre-defined (Inbound)) folder on the local database. 
 Note that only one vendor can be specified in the PO .xml file (one PO 
 per file). <span style="mso-spacerun: yes;"> </span></p>
<p style="mso-list: l0 level1 lfo1;">When it runs, the Start EDI Scanner 
 function will poll the Inbound folder for unprocessed .xml files. When 
 found, the system will first execute the create/update inventory part 
 function (defined below) and then it will create a Purchase Order in the 
 SAMPro database from the .xml file. Once the .xml file is processed it 
 will be moved to a “processed” file folder (defined by the InboundAcceptedFolder 
 registry option) and the log file updated.</p>
<p style="mso-list: l0 level1 lfo1;">Once the PO is created the system 
 will create the 855 PO.xml file, this time with the newly created PO number 
 inserted into the file and place it in a pre-defined folder (as specified 
 by the InboundAccepted option)<span style="font-weight: bold;"> </span>for 
 pick up by the Marketplace app which will then deliver the PO to the designated 
 vendor.</p>
<p style="mso-list: l0 level1 lfo1; mso-bidi-font-weight: normal;"><b>3. 
 Receive Order Acknowledgements that update the existing Purchase Order</b></p>
<p style="mso-list: l0 level1 lfo1;">The Marketplace app will receive Order 
 Acknowledgments (OA) from the vendor and provide a mechanism for users 
 to accept/reject the OA. If accepted, the Marketplace app will create 
 a revised 855 PO.xml file containing all the original and revised data 
 accepted via the Marketplace app and store it in a pre-defined folder 
 on the local database. <span style="mso-spacerun: yes;"> </span>When 
 it runs, Start EDI Scanner will poll the Inbound folder for unprocessed 
 .xml files. When found, the system will first execute the create/update 
 inventory part function (defined below) and then it will update the referenced 
 Purchase Order in the SAMPro database from the .xml file. Once the .xml 
 file is processed it will be moved to a “processed” file folder (defined 
 by InboundAcceptedFolder) and the log file updated.</p>
<p style="mso-list: l0 level1 lfo1; mso-bidi-font-weight: normal;"><b>4. 
 The ability to import Quote Scope details to an existing Quote</b></p>
<p style="mso-list: l0 level1 lfo1;">When a user using the Marketplace 
 app determines that a repair needs to be quoted the app will create a 
 Quote Scope .xml file and store it in &quot;inbound&quot; folder (defined 
 via the InboundFolder registry) on the local database. The user will then 
 create a Quote referencing the diagnostic Work Order Id and then create 
 a new Quote Scope. From the Quote Scope viewer the user will press a new 
 icon labeled “Import Scope”. The system will look in the Quote Scope folder 
 location for .xml files that reference the Work Order Id specified in 
 the Quote header record. <span style="mso-spacerun: yes;"> </span><i style="mso-bidi-font-style: normal;">The Quote .xml file may contain 
 multiple options</i> (qtescpe_id’s) so a selection list needs to be displayed 
 allowing the user to choose which qtescpe_id they want to import. After 
 selecting the system will first execute the create/update inventory part 
 function (defined below) and then the details specified in the (Quote).xml 
 file will import into the Quote Scope viewer. Once the .xml file is processed 
 it will be moved to a “processed” file folder (defined by the InboundAcceptedFolder 
 registry) and the log file updated.</p>
<p style="mso-list: l0 level1 lfo1; mso-bidi-font-weight: normal;"><b>5. 
 Automatic creation/update of Inventory Part records</b></p>
<p style="mso-list: l0 level1 lfo1;">When a new part is sourced by the 
 Marketplace app and the details for the part either need to be added or 
 updated in the SAMPro parts database, the Marketplace app will create 
 an .xml file and store it an &quot;inbound&quot; folder (defined via the 
 InboundFolder registry) on the local database. Every time the automatic 
 PO creation or Quote Scope import functions are executed, SAMPro will 
 first execute an import/update inventory function that looks for unprocessed 
 inventory .xml files in the folder and either creates or updates inventory 
 part records in the SAMPro database. Once the .xml file is processed it 
 will be moved to a “processed” file folder (defined by InboundAcceptedFolder) 
 and the log file updated.</p>
<p style="mso-list: l0 level1 lfo1; mso-bidi-font-weight: normal;"><b>6. 
 Import Automated Ship Notifications (ASN) to the Receiving Journal in 
 SAMPro</b></p>
<p style="mso-list: l0 level1 lfo1;"><span style="mso-list: l0 level1 lfo1;">The 
 Marketplace app will deliver 856 ASN .xml files to a pre-defined folder 
 on the local database. On a daily basis, SAMPro users should open the 
 Inventory Receipts Journal and specify a PO Id; this will execute a function 
 that looks for unprocessed ASM .xml files and creates a selection list 
 for the user to select from. The user will select a PO/ASN that has physically 
 been received in the warehouse and it will then import into the Inventory 
 Receipts Journal.</span></p>

</body></html>