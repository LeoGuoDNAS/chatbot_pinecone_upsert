<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = ".";
    gCommonRootRelPath = ".";
    gTopicId = "2.7.4.8.0_5";
  
//]]></script>

  <script type="text/javascript" src="./template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="./template/scripts/common.min.js"></script>
  <script type="text/javascript" src="./template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="./template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="./whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="./template/styles/topic.min.css"/>
  <link rel="stylesheet" type="text/css" href="./template/single_page/topicheader.css"/>
  <meta name="topic-status" content="Draft"/>

<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
<meta name="topic-status" content="Sent for Review"/>
<meta name="generator" content="Adobe RoboHelp 2020"/>
<title>Sales Tax Import (Alavera)</title>
<link rel="StyleSheet" href="assets/css/sampro.css" type="text/css"/>
<meta name="rh-index-keywords" content="sales tax,avalara (sales tax data),Avalara"/></head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="Sales Tax Import (Alavera)">
        <span>Sales Tax Import (Alavera)</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



<h1>Sales Tax Update (Alavara) - this function is deprecated</h1>
<h2>Purpose:</h2>
<p style="margin-left: 48px;"><span style="font-weight: bold; color: #ff3535;">WARNING: 
 Avalara Data Import</span><span style="font-weight: bold;"><br/>
</span>Recent changes to formatting configurations within the Avalara import 
 files for certain states may require manual updates to Sales Tax Authorities/Groups 
 following the update; for this Data-Basics does <span style="font-weight: bold;">NOT</span> 
 recommend this functionality. These manual updates must be handled by 
 your firm&#39;s personnel.  Version 9.1 supports the <a href="Avalara_Web_Services_Overview.htm">Avalara 
 Web Service</a> (which does not have these import issues); we strongly 
 suggest switching to the Avalara Web Service. </p>
<p>This function enables the user to create and update SAMPro Sales Tax 
 Groups and Authorities from Avalara&#39;s database as delivered in a text 
 file. Note that the Tax Flags will be set in the Sales Tax Group records, 
 NOT the Sales Tax Authorities.  </p>
<h2>Usage:</h2>
<p>The Sales Tax Group Id is based on the Zip Code for imported data.  However, 
 since a single zip code may encompass more than one Sales Tax Group (which 
 specifies the State, County and Municipal / Other Authorities), the Sales 
 Tax Group Id of records generated by running the Start Sales Tax Update 
 will be composed of the Zip Code optionally followed by a .### extension. 
 For example, the Sales Tax Authority with the name &quot;ARVADA JEFFERSON 
 CO COLORADO 80002&quot; is assigned the Id 80002.002 to distinguish it 
 from &quot;DENVER JEFFERSON CO COLORADO 80002&quot; with Id 80002.004. 
 In addition, Use Tax and non Use Tax groups are created.</p>
<h2>Registries:</h2>
<p><a href="Registry_Sales_Tax_Group.htm">Registry Sales Tax Group</a> 
 and <a href="Registry_Sales_Tax_Authority_Viewer.htm">Registry Sales Tax 
 Authority</a> (prevent imported data from being changed/deleted).</p>
<p><a href="Registry_Sales_Tax_Update_(Avalara).htm">Registry Start Sales 
 Tax Update</a> (configure function and override user entries)</p>
<h2>Running the Function:</h2>
<h3>A. To Import an Avalara File:</h3>
<p><img src="assets/images/Import Sales Tax CSV.bmp" alt="" style="border: none;" border="0"/></p>
<p>1. Click the Import Sales Tax CSV button. When you do so, a browse window 
 will open.  Browse to the location your Avalara CSV or TXT files 
 are stored.</p>
<p>2. Select a file to import.  When you do so, the data will be imported. 
  This may take a few minutes. When the Import is complete,  A 
 workspace will open with a log file of your import results; this may be 
 closed or saved.</p>
<h3>B. To Create / Update Sales Tax Authorities/Groups</h3>
<p>Importing the Avalara data does NOT generate / update the Sales Tax 
 Authority and Groups in SAM Pro.  To do so, complete the appropriate 
 fields and then click the Go button.</p>
<p><span style="font-weight: bold;">Last Updated:</span><br/>
Avalara provides a &#39;Last Updated&#39; date for each row in the import files 
 they provide. When the starter function is run to update the Groups and 
 Authorities, Avalara records whose Last Update Date is less than this 
 field will be skipped.  To that ensure all Groups and Authorities 
 are updated leave this field blank.</p>
<p><span style="font-weight: bold;">GL Account Id:</span><br/>
This field specifies the GL Account to be used in Tax Authority records 
 created from Avalara data. This field will be overridden by the stateid~GLAccount 
 registry option if implemented.</p>
<p><span style="font-weight: bold;">Tax Material?</span><br/>
This fields controls how the Tax Material? field in the Sales Tax Groups 
 will be set.  This field will be overridden by the stateid~TaxMaterial 
 registry option if implemented.</p>
<p><span style="font-weight: bold;">Tax Other?</span><br/>
This fields controls how the Tax Other? field in the Sales Tax Groups updated 
 by this function will be set.  This field will be overridden by the 
 stateid~TaxOther registry option if implemented.</p>
<p><span style="font-weight: bold;">Tax Subcontract?</span><br/>
This fields controls how the Tax Subcontract? field will be set in Sales 
 Tax Groups updated by this function.  This field will be overridden 
 by the stateid~TaxSubcontract registry option if implemented.</p>
<p><span style="font-weight: bold;">Labor Tax Selection:</span> <span style="font-weight: bold;">o 
 Use Avalara Rule  o Tax Labor  o Don&#39;t Tax Labor<br/>
</span>This field controls whether or not Labor will be flagged as Taxable 
 in Sales Tax Groups updated by this function.</p>
<p style="font-weight: bold;">Job Cost Use Tax Group Authorities?<br/>
<span style="font-weight: normal;">Flag this field if the Job Cost? box 
 should be flagged for all Authorities in each Use Tax Group. If this box 
 is flagged, the system will assume that Always Create Use Tax Groups is 
 also flagged to avoid undesirable results.</span></p>
<p><span style="font-weight: bold;">State:</span>  <br/>
We recommend completing the State range (with the appropriate 2-character 
 State code); running the function wide open can take considerable time 
 if multiple states have been imported.</p>
<p><span style="font-weight: bold;">Always Create Separate Use Tax Groups?</span><br/>
Flag this box if separate Sales and Use Tax groups should be always be 
 generated, even if the Sales and Use Tax rates are the same.  The 
 Use Tax groups will specify (Use Tax) at the end of the Sales Tax Group 
 Name.</p>
<p><span style="font-weight: bold;">Zip Code:  County Name:  City 
 Name:</span><br/>
Enter one or more of these ranges to limit the update to the specified 
 Avalara data only if you are sure the authorities updated are limited 
 to the ranges specified.</p>
<p style="margin-left: 48px;"><span style="font-weight: bold;">WARNING: 
 Do Not Filter the Avalara Update</span><br/>
If you filter your Avalara update to a specific Zip Code, only that Sales 
 Tax Group would have its Sales Tax Group Rate recalculated. If the update 
 to that Group included changes to rates also impacting other Group (e.g., 
 the State Rate rate), the applicable Tax Authority would be updated, but 
 the other Tax Groups referencing it would not have their Group Tax Rates 
 reset. This is a particular problem since TechAnywhere uses the Group 
 Tax Rate. For this reason, we strongly recommend that you allow your Avalara 
 updates to run wide open so that all applicable Sales Tax Groups will 
 be properly updated.  </p>
<p><img src="assets/images/image/SKIN1_Go.gif" alt="" style="border: none;" border="0"/> 
  Click the Go button to create/update Sale Tax Authority and Group 
 records in SAMPro from the current Avalara Sales Tax data. Formatting 
 configurations within the Avalara import files for certain states may 
 require manual updates to Sales Tax Authorities/Groups following the update. 
 The following enhancements have been made to manage some of the tax anomalies 
 within the Avalara data, and to alert the user to any potential manual 
 changes that may be required. </p>
<p>1. When the Go button is pressed to update the date with the Avalara 
 tax file, validation will show any anomalies in the data about to be imported. 
 When anomalies are found 2 workspaces and a message box will appear. These 
 workspace reports are provided for the users to review the integrity of 
 the data.</p>
<p style="margin-left: 48px;">The first workspace report gives the Authority 
 Id, Tax Type, Tax Rate and Count.  Count is the number of records 
 found in the Avalara import file for that Authority’s Tax Rate.</p>
<p style="margin-left: 48px;">The second workspace report lists Authority 
 Id, Authority Name, Tax Rate, Tax Type and Signature.  The signature 
 shows the zip code and Authority Id’s found with a 0% tax rate. </p>
<p>2. We suggest printing these workspaces before continuing; this will 
 provide you with the information needed if manual adjustments must be 
 made. </p>
<p>3. When the data is imported, if the system finds a state, county or 
 local tax that changes to a zero rate, the system will attempt to create 
 a new tax authorities with a &#39;z&#39; added to the Id. This will result in 
 a new Sales Tax Group being generated.  These new Sales Tax Groups 
 must be added to Jobs as needed. </p>

</body></html>