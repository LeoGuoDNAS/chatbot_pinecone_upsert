<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml"><head>

  <script type="text/javascript" language="JavaScript">
    //<![CDATA[
    function reDo() {
      if (innerWidth != origWidth || innerHeight != origHeight)
        location.reload();
    }
    if ((parseInt(navigator.appVersion) == 4) && (navigator.appName == "Netscape")) {
      origWidth = innerWidth;
      origHeight = innerHeight;
      onresize = reDo;
    }
    onerror = null;
  //]]>
  </script>
  <style type="text/css">/*<![CDATA[*/

    < !-- div.WebHelpPopupMenu {
      position: absolute;
      left: 0px;
      top: 0px;
      z-index: 4;
      visibility: hidden;
    }

    p.WebHelpNavBar {
      text-align: right;
    }

    -->
  
/*]]>*/</style>

  <script type="text/javascript">//<![CDATA[

    gRootRelPath = ".";
    gCommonRootRelPath = ".";
    gTopicId = "2.7.7.6.0_3";
  
//]]></script>

  <script type="text/javascript" src="./template/scripts/rh.min.js"></script>
  <script type="text/javascript" src="./template/scripts/common.min.js"></script>
  <script type="text/javascript" src="./template/scripts/topic.min.js"></script>
  <script type="text/javascript" src="./template/scripts/topicwidgets.min.js"></script>
<script type="text/javascript" src="./whxdata/projectsettings.js"></script>
  <link rel="stylesheet" type="text/css" href="./template/styles/topic.min.css"/>
  <link rel="stylesheet" type="text/css" href="./template/single_page/topicheader.css"/>
  <meta name="topic-status" content="Draft"/>

<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
<meta name="topic-status" content="Sent for Review"/>
<meta name="generator" content="Adobe RoboHelp 2020"/>
<title>Compute Overtime (No Check Printing or Posting)</title>
<link rel="StyleSheet" href="assets/css/sampro.css" type="text/css"/>
<meta name="rh-index-keywords" content="overtime,payroll,compute overtime,compute payroll"/></head>

<body>
  <div class="topic-header rh-hide" id="rh-topic-header">
    <div class="logo">
    </div>
    <div class="nav">
      <div class="title" title="Compute Overtime (No Check Printing or Posting)">
        <span>Compute Overtime (No Check Printing or Posting)</span>
      </div>
      <div class="gotohome" title="Click here to see this page in full context">
        <a href="#" onclick="rh._.goToFullLayout()">Click here to see this page in full context</a>
      </div>
    </div>
  </div>
  <div class="topic-header-shadow rh-hide" id="rh-topic-header-shadow"></div>



<h1>Compute Overtime (No Check Printing or Posting)</h1>
<p>This release extends the functionality of the Overtime calculator work 
 even when checks are not actually printed and posted. To accomplish this, 
 registry settings have been enabled to change the functionality of the 
 Payroll Period&#39;s Post History button to generate Job and GL History as 
 well as Payroll History (default functionality).  Note that the Post 
 History button must be clicked after Compute Overtime and Compute Payroll 
 have been run.</p>
<p style="font-weight: bold;"><span style="font-weight: bold;">This function 
 should ONLY be run for WEEKLY pay periods.</span></p>
<h3>Payroll Procedure for Overtime Calculation</h3>
<p>1. Verify that all registry settings have been properly entered.</p>
<p style="margin-left: 48px;"><span style="font-weight: bold;">NOTE:</span> 
 the Earnings ID in the Employee&#39;s Earnings Tab must have appropriate wage 
 lines flagged as &quot;Add Pay Rate Factor?&quot; in order for this functionality 
 to work.</p>
<p>2. Enter labor for a weekly Payroll Period which has the Accrued to 
 GL box flagged.</p>
<p>2. When the entries for the Payroll Period have been completed, run 
 Start Compute Overtime for the weekly Payroll Period.</p>
<p>3. Next run Start Compute Payroll.</p>
<p>4. In the weekly Payroll Period viewer, click the Post History button 
 to generate Payroll, Job Cost and GL History without printing / posting 
 checks.</p>
<p>5. Run the reports used to generate information for your payroll service.</p>
<h3>Registries</h3>
<p>In addition to the existing registries required for Start Compute Overtime 
 (in sys-start-scmpteovrtme and sys-strart-scmptepryll), the following 
 registries are available to enable/control this Compute Overtime enhancement.</p>
<h5>Start Compute Overtime Registry</h5>
<p><span style="font-weight: bold;">Id:</span> sys-start-scmpteovrtme</p>
<p>This required setting enables this Overtime functionality.</p>
<p><span style="font-weight: bold;">Setting Key:</span> Method    <span style="font-weight: bold;">Setting Value</span>: Hutchinson</p>
<p>The following settings are only applicable if the Method is set to Hutchinson 
 as shown above.</p>
<p>These settings specify the hours that are to be considered &#39;regular&#39; 
 hours (in additional to the regular hours entered) when computing overtime. 
 Note that &#39;regular&#39; hours may be reclassified as overtime when the Compute 
 Overtime function is run.</p>
<p><span style="font-weight: bold;">Setting Key:</span> IncludeHolidayHours  <span style="font-weight: bold;">Setting Value:</span>Y  (default N)<br/>
<span style="font-weight: bold;">Setting Key:</span> IncludeVacationHours 
 <span style="font-weight: bold;">Setting Value:</span>Y  (default 
 N)<br/>
<span style="font-weight: bold;">Setting Key:</span> IncludeSickHours    <span style="font-weight: bold;">Setting Value:</span>Y  (default N)</p>
<p>The existing registry options for sys-start-scmpteovrtme must also be 
 set (see Help for Registry Start Compute Overtime).</p>
<h5>Start Compute Payroll Registry</h5>
<p><span style="font-weight: bold;">Id:</span> sys-compute-payroll</p>
<p>These settings specify the hours that are to be considered &#39;regular&#39; 
 hours when the Compute Payroll function is run. The user will be warned 
 if the user&#39;s regular hours exceed 40 (or the value set via registry) 
 as a reminder to run Compute Overtime first.</p>
<p><span style="font-weight: bold;">Setting Key:</span> RegularHoursIncludesHoliday  <span style="font-weight: bold;">Setting Value:</span> true  (default 
 false)<br/>
<span style="font-weight: bold;">Setting Key:</span> RegularHoursIncludesSick      <span style="font-weight: bold;">Setting Value:</span> true  (default 
 false)<br/>
<span style="font-weight: bold;">Setting Key:</span> RegularHoursIncludesVacation  <span style="font-weight: bold;">Setting Value:  </span>true  (default 
 false)</p>
<p>The existing registry options for sys-start-scmptepyrll must also be 
 set (see Help for Registry Start Compute Payroll).</p>
<h5>View Payroll Period Registry</h5>
<p><span style="font-weight: bold;">Id:</span> sys-viewer-vpyrllprd</p>
<p>This registry impacts the Payroll Period&#39;s Post History button. When 
 enabled, clicking it will generate Job and GL History as well as Payroll 
 history.</p>
<p><span style="font-weight: bold;">Setting Key:</span> PostJCH    <span style="font-weight: bold;">Setting Value:</span>true</p>
<p>The following registry is also recommend to ensure that the Accrue to 
 GL flag is set in the Payroll Period viewer:</p>
<p><span style="font-weight: bold;">Setting Key:</span> AccrueToGL <span style="font-weight: bold;">Setting Value:</span> true</p>
<h5>View Employee</h5>
<p>Require that the Payroll Periods Per Year is set in the Employee record 
 to prevent errors when Overhead and Payroll are computed.</p>
<p><font style="font-weight: bold;">Id: </font> sys-viewer-vemplye</p>
<p><span style="font-weight: bold;">Setting Key:</span> RequiredFieldsParent 
 <span style="font-weight: bold;">Setting Value:</span> emplye.py-prds</p>
<p> </p>

</body></html>